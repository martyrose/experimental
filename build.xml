<?xml version="1.0" encoding="UTF-8"?>
<!--
    NOTE: You can tell log4j to print out its configuration setup by adding
            <jvmarg value="-Dlog4j.debug"/>
-->
<!-- TODO Test compile and test run -->
<project default="init" name="mrose-research">
    <!-- =========================================================== -->
    <!-- Properties                                                  -->
    <!-- =========================================================== -->
    <!-- Base package directories -->
    <property name="build.dir" value="${basedir}/build"/>
	<property name="src.dir" value="${basedir}/src"/>
    <property name="lib.dir" value="${basedir}/lib"/>

    <!--
    ####################### You need to configure these ##########################
    -->

    <!-- =========================================================== -->
    <!-- Classpath setup                                             -->
    <!-- =========================================================== -->
    <fileset id="build.files" dir="${lib.dir}">
        <include name="*.jar"/>
        <include name="*.zip"/>
    </fileset>

    <path id="build.classpath">
        <pathelement location="${build.dir}"/>
        <fileset refid="build.files"/>
    </path>

    <!-- =========================================================== -->
    <!-- init                                                        -->
    <!-- =========================================================== -->
    <target name="init">
        <!-- Initialize the basic timestamps in this running ant instance -->
        <tstamp/>
        <mkdir dir="${build.dir}"/>
    </target>

    <!-- =========================================================== -->
    <!-- clean                                                       -->
    <!-- =========================================================== -->
    <target name="clean" description="Clean out the artifacts from the build process">
        <echo message="Removing old compiled classes"/>
        <delete includeEmptyDirs="true" quiet="true">
            <fileset dir="${build.dir}"/>
        </delete>
    </target>


    <!-- =========================================================== -->
    <!-- compile.src                                                 -->
    <!-- =========================================================== -->
    <target name="compile" depends="init" description="Compiles all the code and properties files into the build directory">
        <javac source="1.6" target="1.6" debug="true" deprecation="false" listfiles="false" destdir="${build.dir}" failonerror="true" debugLevel="lines,vars,source" fork="true" memoryinitialsize="256M" memorymaximumsize="512M">
            <src path="${src.dir}"/>
            <classpath>
                <path refid="build.classpath"/>
            </classpath>
        </javac>
        <!--
             Properties and config files need to be copied.  Not really compiling, but related to
             "populating" ${build.dir} correctly so it goes here...
        -->
        <copy todir="${build.dir}">
            <fileset dir="${src.dir}">
                <include name="*.properties"/>
                <include name="**/*.txt"/>
                <include name="**/*.xml"/>
                <include name="**/*.jrxml"/>
                <include name="**/*.vm"/>
                <include name="**/*.ftl"/>
                <include name="**/*.csv"/>
                <include name="**/*.xslt"/>
                <include name="properties/**/*"/>
            </fileset>
        </copy>
    </target>


<!--
            System.err.println("PROGGIE evolveTimeMin populationSize trainFile rulesFile parallelism percentiles");
            System.err.println("PROGGIE 60 50 /tmp/tesco.txt /tmp/rules.txt 6 99:95:90");
-->
    <target name="profile" depends="compile" description="Run Genetic Profiling">
        <java classname="com.accertify.genetic.MainEntry" fork="true">
            <jvmarg value="-Xmx6g"/>
            <jvmarg value="-Xms1g"/>
            <jvmarg value="-Djava.awt.headless=true"/>
            <jvmarg value="-Dfile.encoding=UTF-8"/>
            <jvmarg value="-Dnetworkaddress.cache.ttl=60"/>
            <jvmarg value="-server"/>
            <arg value="10"/>
            <arg value="50"/>
            <arg value="c:/temp/tesco_full.txt"/>
            <arg value="c:/temp/rules.txt"/>
            <arg value="4"/>
            <arg value="99:95:90:65"/>
            <arg value="c:/temp/scoreProfile.txt"/>
            <classpath>
                <path refid="build.classpath"/>
            </classpath>
        </java>
    </target>


    <target name="stats" depends="compile" description="Run Stats on the rules">
        <java classname="com.accertify.regression.RulesStats" fork="true">
            <jvmarg value="-Xmx1g"/>
            <jvmarg value="-Xms1g"/>
            <jvmarg value="-Djava.awt.headless=true"/>
            <jvmarg value="-Dfile.encoding=UTF-8"/>
            <jvmarg value="-Dnetworkaddress.cache.ttl=60"/>
            <jvmarg value="-server"/>
            <arg value="c:/temp/tesco_full.txt"/>
            <arg value="c:/temp/rules.txt"/>
            <classpath>
                <path refid="build.classpath"/>
            </classpath>
        </java>
    </target>

</project>
